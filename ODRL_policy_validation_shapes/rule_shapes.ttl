@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix vcard: <http://www.w3.org/2006/vcard/ns#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix sh:   <http://www.w3.org/ns/shacl#> .
@prefix drkodrl: <https://w3id.org/drkodrl> .
@prefix dct: <http://purl.org/dc/terms/> .
@prefix : <https://w3id.org/drkodrl> .



# Metadata
:
	a owl:Ontology ;
	rdfs:label "drkodrl shapes 0.01"@en ;
	owl:versionInfo "0.01" ;
	dct:creator "Daham Mustafa" ;
	dct:contributor "" ;
	dct:description "These SHACL shapes are designed to validate and ensure the structural integrity and content validity of ODRL policies."@en ;
	rdfs:comment "This is the RDF ontology for ODRL SHACL shapes Version 0.01."@en ;
    owl:imports <http://datashapes.org/dash> ;
    owl:imports sh: ;
    sh:declare [
        a sh:PrefixDeclaration ;
        sh:namespace "<https://w3id.org/drkodrl>"^^xsd:anyURI ;
        sh:prefix "drkodrl"^^xsd:string ;
    ] .





# SHACL of Policy 

# This SHACL shape is designed to evaluate the compliance of an ODRL policy with specific constraints. It assesses three main aspects of the policy and provides scores based on whether each constraint is met or not.

# ## Constraints Checked by this Shape:
# 1. **C1 - odrl:uid**: This constraint checks whether the policy contains an `odrl:uid` property. If this constraint is met, it receives a passing score; otherwise, it fails.

# 2. **C3 - Meta Information**: This constraint evaluates whether the policy includes essential meta-information properties such as `dc:creator`, `dc:title`, `dc:description`, and `dc:issued`. If all of these properties are present, the constraint passes; otherwise, it fails.

# 3. **C7 - Rule**: This constraint examines the policy rules to ensure they adhere to specified guidelines. If the rules meet the requirements, this constraint is considered passed; otherwise, it fails.

# Each constraint is evaluated independently, and the shape provides scores based on the outcome of each assessment. If all constraints are met, the shape returns a passing score of 3. If one constraint fails, the score is reduced accordingly. A score of 2 indicates that two constraints are met, and a score of 1 indicates that only one constraint is met. If none of the constraints are met, the score is 0, indicating a complete failure to comply with the policy requirements.
## Properties Evaluated by this Shape:
# 1. **odrl:uid**
# 2. **odrl:profile**
# 3. **dc:description**
# 4. **dc:creator**
# 5. **dc:issued**
# 6. **dc:title**
# 7. **dc:creator**
# 8. **odrl:permission, odrl:prohibition, odrl:obligation**
:PolicyShape
    a sh:NodeShape ;
    sh:targetClass odrl:Policy ;
    # C1- odrl:uid
    # 1- score
    sh:property [
        sh:path odrl:uid ;
        # sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    # C2- odrl:profile
    # # 1- score
    # 2
    sh:property [
        sh:path odrl:profile ;
        # sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The 'odrl:profile' property is missing or not an IRI." ;
    ] ;
     # C3- odrl:meta info
     # 1- score
    #  3
     sh:property [
        sh:path dc:description ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        # sh:nodeKind sh:Literal ;
        # sh:in ("Print Agreement description") ;  # Specific value constraint
    ]; 
    # 1- score
    # 4
    sh:property [
        sh:path dc:creator ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    # 1- score
    # 5
    sh:property [
    sh:path dc:issued ;
    sh:datatype xsd:dateTime ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The 'dc:issued' property must have exactly one value of datatype xsd:dateTime." ;
    ] ;
    # 1- score
    # 6
    sh:property [
        sh:path dc:title ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The 'dc:title' property must have exactly one value of datatype xsd:string." ;
    ] ;

   # SHACL shape constraint for dc:creator
   # 1- score
   #    7
    sh:property [
        sh:path dc:creator ;
        # sh:nodeKind sh:literal ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "The 'dc:creator' property is missing or not a Literal of type xsd:string." ;
    ] ;
    # C7- Rule
    # 1- score
    # 8
    sh:or (
        [
            sh:property [
                sh:path odrl:permission ;
                sh:severity sh:Violation ;
                sh:minCount 1 ;
                sh:class odrl:Permission;
                sh:message "At least one 'odrl:permission' is required for this Policy." ;
            ] ;
        ]
        [
            sh:property [
                sh:path odrl:prohibition ;
                sh:severity sh:Violation ;
                sh:minCount 1 ;
                sh:class odrl:Prohibition;
                sh:message "At least one 'odrl:prohibition' is required for this Policy." ;
            ] ;
        ]
        [
            sh:property [
                sh:path odrl:obligation ;
                sh:severity sh:Violation ;
                sh:minCount 1 ;
                sh:class odrl:Obligation;
                sh:message "At least one 'odrl:obligation' is required for this Policy." ;
            ] ;
        ]
    ); 
    sh:message "At least one of 'odrl:permission', 'odrl:prohibition', or 'odrl:obligation' is required for this Policy." .


# SHACL Shape
drkodrl:PermissionShape
    a sh:NodeShape ;
    sh:targetClass odrl:Permission ;
    sh:property [
        sh:path odrl:action ;
        # sh:in (odrl:read odrl:write odrl:copy) ; # Add more values to 'odrl:action'
        sh:minCount 1 ;
    ] ;
 sh:property [
        sh:path odrl:assigner ;
        sh:node drkodrl:PartyShape ; # Reference to the shape for 'odrl:Party'
        sh:minCount 1 ;
    ] .
# Shape for the 'odrl:Party' node
drkodrl:PartyShape
    a sh:NodeShape ;
    sh:targetClass odrl:Party ;
    sh:property [
        sh:path rdf:type ;
        sh:in (odrl:Party) ; # Ensure rdf:type is set to odrl:Party
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path odrl:uid ;
        sh:datatype xsd:anyURI ;
        sh:minCount 1 ;
    ] ;
    sh:property [
        sh:path dc:description ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
    ] .


 
odrl:OfferPolicyShape
    a sh:NodeShape ;
    sh:targetClass odrl:Offer, odrl:Policy ;  # Include both Offer and Policy
    sh:property [
        sh:path rdf:type ;  # Use rdf:type to specify the type
        sh:in (odrl:Offer odrl:Policy) ;  # Allow only odrl:Offer or odrl:Policy as types
    ] ;
    sh:property [
        sh:path dc:description ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        # sh:nodeKind sh:Literal ;
        # sh:in ("Print Agreement description") ;  # Specific value constraint
    ]; 
    sh:property [
        sh:path dc:creator ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;
    sh:property [
    sh:path dc:issued ;
    sh:datatype xsd:dateTime ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:message "The 'dc:issued' property must have exactly one value of datatype xsd:dateTime." ;
    ] ;
    sh:property [
        sh:path dc:title ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The 'dc:title' property must have exactly one value of datatype xsd:string." ;
    ] ;
    sh:property [
        sh:path odrl:profile ;
    sh:nodeKind sh:IRI ;
        #sh:datatype xsd:IRI ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        sh:message "The 'odrl:profile' property must have exactly one value of datatype xsd:anyURI." ;
    ] ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
        ] .

        
    # SHACL constraint for odrl:uid property on Asset, Party, Agreement and Constraint
    drkodrl:AssetPartyConstraintShape
        a sh:NodeShape ;
        sh:targetClass odrl:Asset, odrl:Party, odrl:Constraint,  odrl:Agreement;
        sh:property [
            sh:path odrl:uid ;
            sh:nodeKind sh:IRI ;
            sh:minCount 1 ;
            sh:message "The 'odrl:uid' property is missing or not an IRI." ;
        ] .


# SHACL shape constraint for Agreement structure
drkodrl:AgreementShape
    a sh:NodeShape ;
    sh:targetClass odrl:Agreement ;
    # Include properties from the general Agreement shape
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Agreement's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    sh:property [
        sh:path odrl:permission ;
        sh:nodeKind sh:BlankNodeOrIRI ; 
        sh:minCount 1 ;
        sh:message "An 'odrl:Agreement' must have at least one 'odrl:permission' of type 'odrl:Permission'." ;
        sh:property [
            sh:path odrl:target ;
            sh:nodeKind sh:IRI ; 
            sh:minCount 1 ;
            sh:class odrl:Asset ;
            sh:message "An 'odrl:permission' within 'odrl:ReadAgreement' must have at least one 'odrl:target' of type 'odrl:Asset'." ;
        ] ;
        sh:property [
            sh:path odrl:assignee ;
            sh:nodeKind sh:IRI ;  
            sh:minCount 1 ;
            sh:class odrl:Party ;
            sh:message "An 'odrl:permission' within 'odrl:ReadAgreement' must have at least one 'odrl:assignee' of type 'odrl:Party'." ;
        ] ;
        sh:property [
            sh:path odrl:assigner ;
            sh:nodeKind sh:IRI ;  # Assuming odrl:assigner is an IRI
            sh:minCount 1 ;
            sh:class odrl:Party ;
            sh:message "An 'odrl:permission' within 'odrl:ReadAgreement' must have at least one 'odrl:assigner' of type 'odrl:Party'." ;
        ] ;
    ] .

#Asset
# An Asset SHOULD have one uid property value (of type IRI [rfc3987]) to identify the Asset.
# An Asset MAY have none, one, or many partOf property values (of type AssetCollection) to identify
# the AssetCollection that this Asset is in a collection of.
odrl:AssetShape
    a sh:NodeShape ;
    sh:targetClass odrl:Asset ;
    sh:property [
          sh:path odrl:uid ;
          sh:nodeKind sh:IRI ;
          sh:minCount 1 ;
          sh:message "The Asset's 'odrl:uid' property is missing or not an IRI." ;
      ] ;
    sh:property [
          sh:path odrl:partOf ;
          sh:minCount 0 ;
          sh:maxCount 1 ;
          sh:nodeKind sh:IRI ;
          sh:class odrl:AssetCollection ;
          sh:message "An Asset MAY have none, one, or many partOf property values to identify the AssetCollection that this Asset is in a collection of." ;
      ] .

# Party

# Define a SHACL shape for the Party class
odrl:PartyShape
    a sh:NodeShape ;
    sh:targetClass odrl:Party ;
    sh:property [
          sh:path odrl:uid ;
          sh:nodeKind sh:IRI ;
          sh:minCount 1 ;
          sh:message "The Party's 'odrl:uid' property is missing or not an IRI." ;
      ] ;
    sh:property [
          sh:path odrl:partOf ;
          sh:minCount 0 ;
          sh:maxCount 1 ;
          sh:nodeKind sh:IRI ;
          sh:class odrl:PartyCollection ;
          sh:message "An Party MAY have none, one, or many partOf property values to identify the PartyCollection that this Part is in a collection of." ;
      ] .

# SHACL shape constraint for odrl:Constraint
drkodrl:ConstraintShape
    a sh:NodeShape ;
    sh:targetClass odrl:Constraint ;
    sh:property [
        sh:path odrl:uid ;
        # sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    sh:property [
        sh:path odrl:leftOperand ;
        # sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:leftOperand' of type 'odrl:Operand'." ;
    ] ;
    sh:property [
        sh:path odrl:operator ;
        # sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:operator' of type 'odrl:Operator'." ;
    ] ;
    sh:property [
        sh:path odrl:rightOperand ;
        # sh:nodeKind sh:Literal ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:rightOperand' of type 'rdfs:Literal'." ;
    ] ;
    sh:property [
        sh:path odrl:unit ;
        sh:nodeKind sh:IRI ;
        sh:minCount 0 ;  # Adjust as needed
        sh:message "The Constraint may have 'odrl:unit' of type 'odrl:Unit'." ;
    ] ;
    sh:property [
        sh:path odrl:dataType ;
        sh:nodeKind sh:IRI ;
        sh:minCount 0 ;  # Adjust as needed
        sh:message "The Constraint may have 'odrl:dataType' of type 'rdfs:Datatype'." ;
    ] .






# @prefix sh: <http://www.w3.org/ns/shacl#> .
# @prefix odrl: <https://www.w3.org/ns/odrl/2/> .
# @prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
# @prefix dc: <http://purl.org/dc/terms/> .
# @prefix drkodrl: <https://w3id.org/drkodrl> .

# SHACL shape constraint for Permission within Offer
drkodrl:OfferPermissionShape
    a sh:NodeShape ;
    sh:targetClass odrl:Permission ;
    sh:property [
        sh:path odrl:assigner ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:class odrl:Party ;
        sh:message "An 'odrl:Permission' within 'odrl:Offer' must have at least one 'odrl:assigner' of type 'odrl:Party'." ;
    ] ;
    # Add other constraints specific to 'odrl:Offer' type of Permission
    .

# SHACL shape constraint for Permission within Agreement
drkodrl:AgreementPermissionShape
    a sh:NodeShape ;
    sh:targetClass odrl:Permission ;
    sh:property [
        sh:path odrl:assigner ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:class odrl:Party ;
        sh:message "An 'odrl:Permission' within 'odrl:Agreement' must have at least one 'odrl:assigner' of type 'odrl:Party'." ;
    ] ;
    sh:property [
        sh:path odrl:assignee ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:class odrl:Party ;
        sh:message "An 'odrl:Permission' within 'odrl:Agreement' must have at least one 'odrl:assignee' of type 'odrl:Party'." ;
    ] ;
    # Add other constraints specific to 'odrl:Agreement' type of Permission
    .

# SHACL shape constraint for OfferXYZ
drkodrl:OfferXYZShape
    a sh:NodeShape ;
    sh:targetClass odrl:Offer ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Offer's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    sh:property [
        sh:path odrl:profile ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Offer must have at least one 'odrl:profile' property of type IRI." ;
    ] ;
    sh:property [
        sh:path dc:creator ;
        sh:nodeKind sh:literal ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "The 'dc:creator' property is missing or not a Literal of type xsd:string." ;
    ] ;
    sh:property [
        sh:path odrl:permission ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:minCount 1 ;
        sh:message "An 'odrl:Offer' must have at least one 'odrl:permission' of type 'odrl:Permission'." ;
        sh:property [
            sh:path rdf:type ;
            sh:in (drkodrl:OfferPermissionShape) ;
            sh:message "An 'odrl:permission' within 'odrl:Offer' must be of type 'odrl:Permission'." ;
        ] ;
    ] .



# SHACL shape constraint for AgreementXYZ
drkodrl:AgreementXYZShape
    a sh:NodeShape ;
    sh:targetClass odrl:Agreement ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Agreement's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    sh:property [
        sh:path dc:creator ;
        sh:nodeKind sh:literal ;
        sh:datatype xsd:string ;
        sh:minCount 1 ;
        sh:message "The 'dc:creator' property is missing or not a Literal of type xsd:string." ;
    ] ;
    sh:property [
        sh:path odrl:permission ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:minCount 1 ;
        sh:message "An 'odrl:Agreement' must have at least one 'odrl:permission' of type 'odrl:Permission'." ;
        sh:property [
            sh:path rdf:type ;
            sh:in (drkodrl:AgreementPermissionShape) ;
            sh:message "An 'odrl:permission' within 'odrl:Agreement' must be of type 'odrl:Permission'." ;
        ] ;
    ] .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix odrl: <https://www.w3.org/ns/odrl/2/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dc: <http://purl.org/dc/terms/> .
@prefix drkodrl: <https://w3id.org/drkodrl> .

# SHACL shape constraint for odrl:Constraint
drkodrl:ConstraintShape
    a sh:NodeShape ;
    sh:targetClass odrl:Constraint ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    sh:property [
        sh:path odrl:leftOperand ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:leftOperand' of type 'odrl:Operand'." ;
    ] ;
    sh:property [
        sh:path odrl:operator ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:operator' of type 'odrl:Operator'." ;
    ] ;
    sh:property [
        sh:path odrl:rightOperand ;
        sh:nodeKind sh:Literal ;
        sh:minCount 1 ;
        sh:message "The Constraint must have at least one 'odrl:rightOperand' of type 'rdfs:Literal'." ;
    ] ;
    sh:property [
        sh:path odrl:unit ;
        sh:nodeKind sh:IRI ;
        sh:minCount 0 ;  # Adjust as needed
        sh:message "The Constraint may have 'odrl:unit' of type 'odrl:Unit'." ;
    ] ;
    sh:property [
        sh:path odrl:dataType ;
        sh:nodeKind sh:IRI ;
        sh:minCount 0 ;  # Adjust as needed
        sh:message "The Constraint may have 'odrl:dataType' of type 'rdfs:Datatype'." ;
    ] .

# SHACL shape constraint for odrl:Offer
drkodrl:OfferShape
    a sh:NodeShape ;
    sh:targetClass odrl:Offer ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Offer's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    # Add other constraints specific to 'odrl:Offer'
    sh:property [
        sh:path odrl:constraint ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:minCount 1 ;
        sh:message "An 'odrl:Offer' must have at least one 'odrl:constraint' of type 'odrl:Constraint'." ;
        sh:property [
            sh:path rdf:type ;
            sh:in (drkodrl:ConstraintShape) ;
            sh:message "An 'odrl:constraint' within 'odrl:Offer' must be of type 'odrl:Constraint'." ;
        ] ;
    ] .

# SHACL shape constraint for odrl:Permission
drkodrl:PermissionShape
    a sh:NodeShape ;
    sh:targetClass odrl:Permission ;
    sh:property [
        sh:path odrl:assigner ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:class odrl:Party ;
        sh:message "An 'odrl:Permission' must have at least one 'odrl:assigner' of type 'odrl:Party'." ;
    ] ;
    sh:property [
        sh:path odrl:assignee ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:class odrl:Party ;
        sh:message "An 'odrl:Permission' must have at least one 'odrl:assignee' of type 'odrl:Party'." ;
    ] ;
    sh:property [
        sh:path odrl:action ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        # Add more constraints based on your specific requirements
    ] ;
    sh:property [
        sh:path odrl:constraint ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:minCount 1 ;
        sh:message "An 'odrl:Permission' must have at least one 'odrl:constraint' of type 'odrl:Constraint'." ;
        sh:property [
            sh:path rdf:type ;
            sh:in (drkodrl:ConstraintShape) ;
            sh:message "An 'odrl:constraint' within 'odrl:Permission' must be of type 'odrl:Constraint'." ;
        ] ;
    ] .

# Include other shapes for properties like dc:creator, dc:title, etc.

# Main shape for odrl:OfferXYZ
drkodrl:OfferXYZShape
    a sh:NodeShape ;
    sh:targetClass odrl:Offer ;
    sh:property [
        sh:path odrl:uid ;
        sh:nodeKind sh:IRI ;
        sh:minCount 1 ;
        sh:message "The Offer's 'odrl:uid' property is missing or not an IRI." ;
    ] ;
    # Add other constraints specific to 'odrl:OfferXYZ'
    sh:property [
        sh:path odrl:constraint ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        sh:minCount 1 ;
        sh:message "An 'odrl:OfferXYZ' must have at least one 'odrl:constraint' of type 'odrl:Constraint'." ;
        sh:property [
            sh:path rdf:type ;
            sh:in (drkodrl:ConstraintShape) ;
            sh:message "An 'odrl:constraint' within 'odrl:OfferXYZ' must be of type 'odrl:Constraint'." ;
        ] ;
    ] .
